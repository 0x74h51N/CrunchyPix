{
  "page": {
    "title": "Portfolio",
    "details": "Project Details",
    "otherProjects": "Other Projects"
  },
  "portfolioItemComp": {
    "category": "Category",
    "client": "Client",
    "location": "Location",
    "date": "Publish Date",
    "tech": "Tech"
  },
  "projectSlides": {
    "title": "Portfolio",
    "title2": "Portfolio Page",
    "click": "For more details..."
  },
  "items": [
    {
      "title": "CrunchyPix",
      "projectType": "Webpage Desing",
      "slideDescription": "Initiated for my website and to showcase front-end skills. Developed dynamic components and pages. Features include international language options and animation transitions. Visit GitHub for code details.",
      "title2": "Creation of This Web Page",
      "techTitle": "Tech Summary",
      "techDescription": "In crafting CrunchyPix, we harnessed cutting-edge technologies, utilizing Next.js (14) and TypeScript as our primary tools. React, the foundational library, provided the flexibility and robustness required to bring our collective vision to life. To ensure a seamless user experience worldwide, i18n integration and custom language translation components were employed. We delved into state management, with Redux orchestrating intricate details such as language preferences, custom cursor interactions, and device responsiveness. Enchanting animation transitions, crafted with motion.div and meticulously developed custom variants, bring life to CrunchyPix. Every page, whether showcasing products or policies, is dynamically generated, offering a responsive environment. Our commitment extends to version control and collaboration tools like GitHub, where we store and manage project files. Dependabot, CodeQL, and Vercel are additional tools enhancing our development workflow.",
      "description": "CrunchyPix is not just a personal website;\nit's a testament to the power of minimal and impactful design.",
      "description2": "It demonstrates how a website can be both long-lasting and easily adaptable with modular, dynamic, and custom components. Leveraging the capabilities of Next.js and its compatible libraries, I showcased how to find the most up-to-date and effective solutions tailored to specific needs. The site's responsive and adaptive design ensures seamless user experiences across various devices, including mobile and tablet screens, maximizing user satisfaction with optimal solutions and bringing unique designs together.",
      "ticks": [
        "Branding & Design",
        "Web Development",
        "Responsive & Adaptive",
        "Modular Components",
        "Dynamic Rooting",
        "Pixel Perfect",
        "SEO Optimization",
        "UX/UI Design & Optimization",
        "Performance Optimization",
        "Cross-Browser Compatibility"
      ],
      "client": "Tahsin Ã–.",
      "location": "Istanbul / TURKEY"
    },
    {
      "title": "CC Order",
      "projectType": "Landing Page",
      "slideDescription": "Created for credit card orders. Designed in Figma and implemented with React components. Access is controlled via API key from the backoffice application.",
      "title2": "CC Order Landing Page",
      "techTitle": "Tech Summary",
      "techDescription": "This landing page is built using Next.js, TypeScript, and CSS styles. Additionally, a custom table creator component is developed using the React Table library. It includes special i18n language files for language options and an API integration for communication with the backend. The accuracy of the JSON token is verified for page display; access to the page is granted with a special token for registered customers. Backend and verification features are removed in the sample page, and the CC Order process is disabled.  GitHub link is private, but I can share developed components and page code upon request.",
      "description": "Simple and Effective Landing Page",
      "description2": "This landing page, with a responsive, adaptive, and visually appealing design, is designed for providing fee information before credit card orders for registered customers of Novem Gold. Additionally, the credit card image used is specially designed for Novem Gold and showcased with a flip feature.",
      "ticks": [
        "Welcome Page",
        "Web Development",
        "Responsive & Adaptive",
        "Modular Component",
        "API Integration",
        "UX/UI Design & Optimization",
        "Performance Optimization",
        "Cross-Browser Compatibility"
      ],
      "client": "Novem Gold",
      "location": "Linz / AUSTRIA"
    },
    {
      "title": "Minting UI",
      "projectType": "UI/UX",
      "slideDescription": "Developed for a UI using minting and burning functions for NNN and NVM tokens on Binance Smart Chain (BSC). Eth-2 scaffold used, contracts obtained from BSC, deployed, and ABI created. Integrated with BSC using Wagmi, enabling minting and burning functions. Other functions available on the debugging page.",
      "title2": "Minting and Burning UI",
      "techTitle": "Tech Summary",
      "techDescription": "In creating the Minting UI, we employed a variety of cutting-edge technologies, with TypeScript and Next.js forming the foundation of the project. The UI is designed with a focus on user experience and functionality, utilizing Tailwind CSS for styling. Hardhat was used for the Ethereum 2.0 scaffold, and contracts were obtained from the Binance Smart Chain (BSC) for deployment. ABI (Application Binary Interface) was created for seamless interaction with the deployed contracts. The UI is fully integrated with BSC through Wagmi, facilitating minting and burning functions for NNN and NVM tokens. Wallet connectivity is established using RainbowKit, allowing users with permission to connect their wallets and utilize various functions, including minting, burning, and other features available on the debugging page for comprehensive testing and analysis.",
      "description": "User Interface for Minting and Burning",
      "description2": "The Minting UI project is a user-friendly interface designed to execute minting and burning functions for NNN and NVM tokens on the Binance Smart Chain. Leveraging TypeScript and Next.js, the UI ensures a smooth and efficient user experience. The project also includes dark and light theme options for user preference. This UI allows users with authorized wallets to connect and perform minting, burning, or other functions in the debugging section.",
      "ticks": [
        "UI/UX Design",
        "Token Minting & Burning",
        "Binance Smart Chain Integration",
        "Responsive & Adaptive",
        "Hardhat Development",
        "React Components",
        "Wagmi Integration",
        "Debugging & Testing",
        "Performance Optimization",
        "Cross-Browser Compatibility"
      ],
      "client": "CypherX",
      "location": "Munich / GERMANY"
    },
    {
      "title": "KYK Eletric Inc.",
      "projectType": "Webpage Desing",
      "slideDescription": "My first website developed using WordPress and limited code. Developed with many custom design elements.",
      "client": "KYK Electric Inc.",
      "location": "Istanbul / TURKEY"
    }
  ]
}
